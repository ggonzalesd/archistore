---
import Price from '@/components/Price.astro';

interface Props {
  title: string;
  slug: string;
  discount: number;
  price?: number;
}

const { price, slug, title, discount } = Astro.props;

const formatPrice =
  price == null || price <= 0 ? 'FREE' : parseFloat(`${price}`).toFixed(2);
---

<article
  class:list={[
    'flex flex-col items-stretch gap-1 rounded-lg bg-gradient-to-b from-sky-800/20 bg-no-repeat transition-transform has-[.absolute:hover]:scale-[1.02]',
    [
      'to-rose-600/20',
      'to-yellow-600/20',
      'to-green-600/20',
      'to-purple-600/20',
    ][Math.floor(Math.random() * 4)],
  ]}
>
  <a href={`/p/${slug}`}>
    <picture class='flex w-full justify-center overflow-hidden rounded-t-md'>
      <img
        src={`https://res.cloudinary.com/dtk4jojr5/image/upload/v1729202479/store/${slug}_0.webp`}
        width='32'
        class='h-32 w-full object-contain object-center transition-transform hover:scale-105 hover:cursor-pointer'
      />
    </picture>
  </a>
  <span class='px-2 text-sm'>{title}</span>
  <div class='px-2'>
    <span class='rounded-full bg-red-600/20 px-2 text-xs text-red-400'>
      Tag
    </span>
  </div>
  <div class='flex items-center justify-between px-2 pb-2'>
    {
      (
        <Price size='SMALL' price={price ?? 0} discount={discount} />
        // formatPrice === 'FREE' ? (
        //   <span class='rounded bg-green-400/20 px-2 font-bold text-green-400'>
        //     FREE
        //   </span>
        // ) : (
        //   <span class='font-bold text-yellow-400'>$ {formatPrice}</span>
        // )
      )
    }
  </div>
</article>

<style scoped>
  img {
    --base-transparent: transparent;
    mask-image: linear-gradient(to top, var(--base-transparent) 0%, white 50%);
    transition: var(--base-transparent) 399ms ease;
  }
  img:hover {
    --base-transparent: white;
  }
</style>
