---
import Layout from '@/layouts/Layout.astro';

import PaymentButton from '@/components/PaymentButton.astro';
import Price from '@/components/Price.astro';

import WaitingButton from '@/components/WaitingButton';
import PhotoView from '@/components/PhotoView';

import PaypalSvg from '@/components/logos/PaypalSvg.astro';

import { generateFreeJwtToken } from '@/providers/jwt';
import {
  supabaseGetOrderProduct,
  supabaseGetProduct,
} from '@/providers/supabase';
import { AppError, responseError } from '@/utils/app-error';
import { supabaseAuthHelper } from '@/utils/supabase-auth-helper';
import PriceSection from '@/components/PriceSection.astro';

const { slug } = Astro.params;

let product: Awaited<ReturnType<typeof supabaseGetProduct>> | null = null;
const tokenFree = generateFreeJwtToken(slug ?? '');

let order: Awaited<ReturnType<typeof supabaseGetOrderProduct>> | null = null;

try {
  if (!slug) throw AppError.notFound('Product not found').withEncrypted(false);

  const supabase = supabaseAuthHelper(Astro);
  product = await supabaseGetProduct(supabase, slug);

  if (Astro.locals.user && product.price > 0) {
    try {
      order = await supabaseGetOrderProduct(
        supabase,
        Astro.locals.user.id,
        product.id
      );
    } catch (e) {
      // Nothing to do
    }
  }
} catch (e) {
  return responseError(e, Astro);
}
---

<Layout title='Product'>
  <section
    class='container mx-auto grid grid-cols-1 px-2 py-4 pt-20 md:grid-cols-2'
  >
    <div class='flex flex-col items-center justify-center gap-3'>
      <PhotoView
        slug={product.id}
        photos={Math.max(product.photos, 1)}
        client:visible
      />
    </div>
    <div class='flex h-full flex-col gap-2'>
      <h1 class='mb-4 text-4xl text-rose-300'>{product.title}</h1>
      <p class='max-w-[50ch] leading-7'>{product.description}</p>

      <div class='my-4 flex flex-col gap-2'>
        <span class='text-xl text-rose-300'>Price</span>
        <div class='flex items-center gap-4'>
          <Price
            size='LARGE'
            price={product.price}
            discount={product.discount}
          />
        </div>
      </div>

      <div class='my-4 flex gap-4'>
        {
          !(product.price > 0) && (
            <span>
              The download button is located at the bottom of the page.
            </span>
          )
        }

        {
          product.price > 0 && (
            <PriceSection slug={slug} approved={order?.approved} />
          )
        }
      </div>
    </div>
  </section>

  {
    (true || import.meta.env.PROD) && (
      <section class='container mx-auto px-28 py-4'>
        <div class='grid grid-cols-4 gap-2'>
          <div class='aspect-video size-full bg-zinc-500' />
          <div class='aspect-video size-full bg-zinc-500' />
          <div class='aspect-video size-full bg-zinc-500' />
          <div class='aspect-video size-full bg-zinc-500' />
        </div>
      </section>
    )
  }

  <section class='container mx-auto flex justify-center px-2 py-12'>
    {
      !(product.price > 0) && (
        <WaitingButton
          href={`/api/storage/${slug}/?free=${tokenFree}`}
          reload={'/p/' + slug}
          time={15}
          maxtime={60 * 5}
          client:load
        />
      )
    }
  </section>
</Layout>
